import BaseLayout from "@/components/BaseLayout/BaseLayout";
import { MenuIcon } from "@/components/Icons/MenuIcons";
import DeallSelect from "@/components/Select/Select";
import Table from "@/components/Table/Table";
import Toolbar from "@/components/Toolbar/Toolbar";
import { columns } from "@/constant/productColumn";
import { ProductService } from "@/Services/ProductService";
import { SelectChangeEvent } from "@mui/material/Select";
import { GridColDef } from "@mui/x-data-grid";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";

export const Menu = [
  {
    id: "product",
    icon: MenuIcon.home,
    name: "Products",
  },
  {
    id: "cart",
    icon: MenuIcon.portfolio,
    name: "Cart",
  },
];

const userData = {
  portfolio: "130.431.449",
  buyingPwr: 13431449,
  image: <img src="/Image/user.png" alt="user" />,
};

export default function Home() {
  const [product, setProduct] = useState([]);
  const [search, setSearch] = useState();
  const [categories, setCategories] = useState([]);
  const [selectedCateg, setSelectedCateg] = useState('');

  const productService = new ProductService();

  const handleSearchClick = async () => {
    const res = (await productService.getProductSearch(search)).data;
    setProduct(res.products);
  };

  const handleCategFilter = async (c: any) => {
    const res = (await productService.getProductFilter(c)).data;
    setProduct(res.products);
  }

  const handleSearchChange = (e: any) => {
    e.preventDefault();
    setSearch(e.target.value);
  };

  const handleSubmit = (e : any) => {
    if (e.keyCode == 13 || e.which == 13) {
      e.preventDefault();
      handleSearchClick();
    }
  }

    const handleChange = (event: SelectChangeEvent) => {
      setSelectedCateg(event.target.value);
      handleCategFilter(event.target.value);
    };

  useEffect(() => {
    async function getProduct() {
      const data = (await productService.getProduct()).data;
      setProduct(data.products);
    }

    async function getCategories() {
      const data = (await productService.getCategories()).data;
      setCategories(data);
    }
    getProduct();
    getCategories();
  }, []);

  const productRows = product.map((p: any, key) => {
    // if(p.brand === 'Apple'){

    // }
    return {
      id: key,
      productName: p.title,
      brand: p.brand,
      price: p.price,
      stock: p.stock,
      category: p.category,
    };
  });

  return (
    <>
      <Head>
        <title>Admin</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <BaseLayout
          menu={Menu}
          sidebarLogo={<>Toko Online</>}
          headerData={userData}
        >
          {/* <div className="bg-basic-12 h-24 w-full mb-4"></div> */}
          <Toolbar onChange={handleSearchChange} onClick={handleSearchClick} onSubmit={handleSubmit}>
            <DeallSelect 
              label="Categories"
              options={categories}
              value={selectedCateg}
              handleChange = {handleChange}

            />
          </Toolbar>

          <Table rows={productRows} columns={columns} />
        </BaseLayout>
      </main>
    </>
  );
}
